
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'F989AD91A2779C140C96DA0E6170A731'
    
_lr_action_items = {'PRINT':([0,2,3,9,10,11,20,21,22,23,24,25,26,36,37,38,39,40,42,43,44,45,51,74,75,82,83,84,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,114,116,117,118,122,123,124,125,127,128,131,132,133,135,136,138,140,141,142,],[13,13,-3,-9,-10,-11,-57,-2,-4,-5,-6,-7,-8,-19,-20,-21,-22,-23,-41,-42,-43,-44,13,-53,-54,-75,-67,13,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-45,-46,13,13,13,-58,-24,-25,-26,-68,-66,-69,-76,13,-71,-70,13,-72,13,-69,-71,]),'RETURN':([0,2,3,9,10,11,20,21,22,23,24,25,26,36,37,38,39,40,42,43,44,45,51,74,75,82,83,84,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,114,116,117,118,122,123,124,125,127,128,131,132,133,135,136,138,140,141,142,],[14,14,-3,-9,-10,-11,-57,-2,-4,-5,-6,-7,-8,-19,-20,-21,-22,-23,-41,-42,-43,-44,14,-53,-54,-75,-67,14,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-45,-46,14,14,14,-58,-24,-25,-26,-68,-66,-69,-76,14,-71,-70,14,-72,14,-69,-71,]),'BREAK':([0,2,3,9,10,11,20,21,22,23,24,25,26,36,37,38,39,40,42,43,44,45,51,74,75,82,83,84,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,114,116,117,118,122,123,124,125,127,128,131,132,133,135,136,138,140,141,142,],[15,15,-3,-9,-10,-11,-57,-2,-4,-5,-6,-7,-8,-19,-20,-21,-22,-23,-41,-42,-43,-44,15,-53,-54,-75,-67,15,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-45,-46,15,15,15,-58,-24,-25,-26,-68,-66,-69,-76,15,-71,-70,15,-72,15,-69,-71,]),'CONTINUE':([0,2,3,9,10,11,20,21,22,23,24,25,26,36,37,38,39,40,42,43,44,45,51,74,75,82,83,84,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,114,116,117,118,122,123,124,125,127,128,131,132,133,135,136,138,140,141,142,],[16,16,-3,-9,-10,-11,-57,-2,-4,-5,-6,-7,-8,-19,-20,-21,-22,-23,-41,-42,-43,-44,16,-53,-54,-75,-67,16,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-45,-46,16,16,16,-58,-24,-25,-26,-68,-66,-69,-76,16,-71,-70,16,-72,16,-69,-71,]),'FOR':([0,2,3,9,10,11,20,21,22,23,24,25,26,36,37,38,39,40,42,43,44,45,51,74,75,82,83,84,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,114,116,117,118,122,123,124,125,127,128,131,132,133,135,136,138,140,141,142,],[17,17,-3,-9,-10,-11,-57,-2,-4,-5,-6,-7,-8,-19,-20,-21,-22,-23,-41,-42,-43,-44,17,-53,-54,-75,-67,17,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-45,-46,17,17,17,-58,-24,-25,-26,-68,-66,-69,-76,17,-71,-70,17,-72,17,-69,-71,]),'WHILE':([0,2,3,9,10,11,20,21,22,23,24,25,26,36,37,38,39,40,42,43,44,45,51,74,75,82,83,84,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,114,116,117,118,122,123,124,125,127,128,131,132,133,135,136,138,140,141,142,],[18,18,-3,-9,-10,-11,-57,-2,-4,-5,-6,-7,-8,-19,-20,-21,-22,-23,-41,-42,-43,-44,18,-53,-54,-75,-67,18,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-45,-46,18,18,18,-58,-24,-25,-26,-68,-66,-69,-76,18,-71,-70,18,-72,18,-69,-71,]),'IF':([0,2,3,9,10,11,20,21,22,23,24,25,26,36,37,38,39,40,42,43,44,45,51,74,75,82,83,84,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,114,116,117,118,122,123,124,125,127,128,131,132,133,135,136,138,140,141,142,],[19,19,-3,-9,-10,-11,-57,-2,-4,-5,-6,-7,-8,-19,-20,-21,-22,-23,-41,-42,-43,-44,19,-53,-54,-75,-67,19,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-45,-46,19,19,19,-58,-24,-25,-26,-68,-66,-69,-76,134,-71,-70,19,-72,19,-69,-71,]),'ID':([0,2,3,9,10,11,13,14,17,20,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,51,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,81,82,83,84,85,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,114,116,117,118,119,122,123,124,125,126,127,128,131,132,133,135,136,137,138,140,141,142,],[20,20,-3,-9,-10,-11,20,20,52,-57,-2,-4,-5,-6,-7,-8,20,-61,-62,-63,-64,-65,-19,-20,-21,-22,-23,20,-41,-42,-43,-44,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-53,-54,20,20,20,-75,-67,20,20,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-45,-46,20,20,20,-58,20,-24,-25,-26,-68,20,-66,-69,-76,20,-71,-70,20,20,-72,20,-69,-71,]),'$end':([1,2,3,9,10,11,21,22,23,24,25,26,82,83,125,127,128,133,135,138,141,142,],[0,-1,-3,-9,-10,-11,-2,-4,-5,-6,-7,-8,-75,-67,-68,-66,-69,-71,-70,-72,-69,-71,]),'}':([3,9,10,11,21,22,23,24,25,26,82,83,114,125,127,128,133,135,138,141,142,],[-3,-9,-10,-11,-2,-4,-5,-6,-7,-8,-75,-67,125,-68,-66,-69,-71,-70,-72,-69,-71,]),';':([4,5,6,7,8,15,16,20,33,34,35,36,37,38,39,40,42,43,44,45,50,56,57,58,74,75,76,77,78,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,118,120,121,122,123,124,],[22,23,24,25,26,-12,-13,-57,-15,-16,-18,-19,-20,-21,-22,-23,-41,-42,-43,-44,-14,-22,-55,-56,-53,-54,108,-48,-50,-17,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-45,-46,-58,-47,-49,-24,-25,-26,]),'ELSE':([9,10,11,22,23,24,25,26,82,83,125,127,128,133,135,138,141,142,],[-9,-10,-11,-4,-5,-6,-7,-8,-75,-67,-68,-66,132,136,-70,-72,132,136,]),'=':([12,20,52,56,118,],[28,-57,85,28,-58,]),'ADDASSIGN':([12,20,56,118,],[29,-57,29,-58,]),'SUBASSIGN':([12,20,56,118,],[30,-57,30,-58,]),'MULASSIGN':([12,20,56,118,],[31,-57,31,-58,]),'DIVASSIGN':([12,20,56,118,],[32,-57,32,-58,]),'-':([13,14,20,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,50,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,81,85,86,87,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,111,112,113,115,118,119,122,123,124,126,129,130,131,137,139,],[41,41,-57,41,-61,-62,-63,-64,-65,61,-19,-20,-21,-22,-23,41,-41,-42,-43,-44,61,41,41,41,-22,61,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-53,-54,41,41,41,41,61,61,61,-42,-27,-28,-29,-30,61,61,61,61,61,61,-37,-38,-39,-40,-45,-46,61,61,61,61,-58,41,-24,-25,-26,41,61,-42,61,41,61,]),'FLOAT':([13,14,27,28,29,30,31,32,41,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,79,80,81,85,119,126,137,],[42,42,42,-61,-62,-63,-64,-65,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'INT':([13,14,27,28,29,30,31,32,41,46,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,79,80,81,85,108,110,119,126,137,],[43,43,43,-61,-62,-63,-64,-65,43,78,43,43,91,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,78,121,130,43,43,]),'STRING':([13,14,27,28,29,30,31,32,41,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,79,80,81,85,119,126,137,],[44,44,44,-61,-62,-63,-64,-65,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'ZEROS':([13,14,27,28,29,30,31,32,41,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,79,80,81,85,119,126,137,],[47,47,47,-61,-62,-63,-64,-65,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'ONES':([13,14,27,28,29,30,31,32,41,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,79,80,81,85,119,126,137,],[48,48,48,-61,-62,-63,-64,-65,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'EYE':([13,14,27,28,29,30,31,32,41,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,79,80,81,85,119,126,137,],[49,49,49,-61,-62,-63,-64,-65,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'[':([13,14,20,27,28,29,30,31,32,41,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,79,80,81,85,119,126,137,],[46,46,55,46,-61,-62,-63,-64,-65,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'(':([18,19,47,48,49,134,],[53,54,79,80,81,137,]),'+':([20,35,36,37,38,39,40,42,43,44,45,50,56,57,74,75,86,87,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,111,112,113,115,118,122,123,124,129,130,131,139,],[-57,60,-19,-20,-21,-22,-23,-41,-42,-43,-44,60,-22,60,-53,-54,60,60,60,-42,-27,-28,-29,-30,60,60,60,60,60,60,-37,-38,-39,-40,-45,-46,60,60,60,60,-58,-24,-25,-26,60,-42,60,60,]),'*':([20,35,36,37,38,39,40,42,43,44,45,50,56,57,74,75,86,87,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,111,112,113,115,118,122,123,124,129,130,131,139,],[-57,62,-19,-20,-21,-22,-23,-41,-42,-43,-44,62,-22,62,-53,62,62,62,62,-42,62,62,-29,-30,62,62,62,62,62,62,-37,-38,-39,-40,-45,-46,62,62,62,62,-58,-24,-25,-26,62,-42,62,62,]),'/':([20,35,36,37,38,39,40,42,43,44,45,50,56,57,74,75,86,87,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,111,112,113,115,118,122,123,124,129,130,131,139,],[-57,63,-19,-20,-21,-22,-23,-41,-42,-43,-44,63,-22,63,-53,63,63,63,63,-42,63,63,-29,-30,63,63,63,63,63,63,-37,-38,-39,-40,-45,-46,63,63,63,63,-58,-24,-25,-26,63,-42,63,63,]),'<':([20,35,36,37,38,39,40,42,43,44,45,50,56,57,74,75,86,87,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,111,112,113,115,118,122,123,124,129,130,131,139,],[-57,64,-19,-20,-21,-22,-23,-41,-42,-43,-44,64,-22,64,-53,-54,64,64,64,-42,-27,-28,-29,-30,None,None,None,None,None,None,-37,-38,-39,-40,-45,-46,64,64,64,64,-58,-24,-25,-26,64,-42,64,64,]),'>':([20,35,36,37,38,39,40,42,43,44,45,50,56,57,74,75,86,87,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,111,112,113,115,118,122,123,124,129,130,131,139,],[-57,65,-19,-20,-21,-22,-23,-41,-42,-43,-44,65,-22,65,-53,-54,65,65,65,-42,-27,-28,-29,-30,None,None,None,None,None,None,-37,-38,-39,-40,-45,-46,65,65,65,65,-58,-24,-25,-26,65,-42,65,65,]),'LEQ':([20,35,36,37,38,39,40,42,43,44,45,50,56,57,74,75,86,87,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,111,112,113,115,118,122,123,124,129,130,131,139,],[-57,66,-19,-20,-21,-22,-23,-41,-42,-43,-44,66,-22,66,-53,-54,66,66,66,-42,-27,-28,-29,-30,None,None,None,None,None,None,-37,-38,-39,-40,-45,-46,66,66,66,66,-58,-24,-25,-26,66,-42,66,66,]),'GEQ':([20,35,36,37,38,39,40,42,43,44,45,50,56,57,74,75,86,87,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,111,112,113,115,118,122,123,124,129,130,131,139,],[-57,67,-19,-20,-21,-22,-23,-41,-42,-43,-44,67,-22,67,-53,-54,67,67,67,-42,-27,-28,-29,-30,None,None,None,None,None,None,-37,-38,-39,-40,-45,-46,67,67,67,67,-58,-24,-25,-26,67,-42,67,67,]),'NOTEQ':([20,35,36,37,38,39,40,42,43,44,45,50,56,57,74,75,86,87,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,111,112,113,115,118,122,123,124,129,130,131,139,],[-57,68,-19,-20,-21,-22,-23,-41,-42,-43,-44,68,-22,68,-53,-54,68,68,68,-42,-27,-28,-29,-30,None,None,None,None,None,None,-37,-38,-39,-40,-45,-46,68,68,68,68,-58,-24,-25,-26,68,-42,68,68,]),'EQUAL':([20,35,36,37,38,39,40,42,43,44,45,50,56,57,74,75,86,87,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,111,112,113,115,118,122,123,124,129,130,131,139,],[-57,69,-19,-20,-21,-22,-23,-41,-42,-43,-44,69,-22,69,-53,-54,69,69,69,-42,-27,-28,-29,-30,None,None,None,None,None,None,-37,-38,-39,-40,-45,-46,69,69,69,69,-58,-24,-25,-26,69,-42,69,69,]),'DOTADD':([20,35,36,37,38,39,40,42,43,44,45,50,56,57,74,75,86,87,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,111,112,113,115,118,122,123,124,129,130,131,139,],[-57,70,-19,-20,-21,-22,-23,-41,-42,-43,-44,70,-22,70,-53,70,70,70,70,-42,70,70,70,70,70,70,70,70,70,70,-37,-38,-39,-40,-45,-46,70,70,70,70,-58,-24,-25,-26,70,-42,70,70,]),'DOTSUB':([20,35,36,37,38,39,40,42,43,44,45,50,56,57,74,75,86,87,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,111,112,113,115,118,122,123,124,129,130,131,139,],[-57,71,-19,-20,-21,-22,-23,-41,-42,-43,-44,71,-22,71,-53,71,71,71,71,-42,71,71,71,71,71,71,71,71,71,71,-37,-38,-39,-40,-45,-46,71,71,71,71,-58,-24,-25,-26,71,-42,71,71,]),'DOTMUL':([20,35,36,37,38,39,40,42,43,44,45,50,56,57,74,75,86,87,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,111,112,113,115,118,122,123,124,129,130,131,139,],[-57,72,-19,-20,-21,-22,-23,-41,-42,-43,-44,72,-22,72,-53,72,72,72,72,-42,72,72,72,72,72,72,72,72,72,72,72,72,-39,-40,-45,-46,72,72,72,72,-58,-24,-25,-26,72,-42,72,72,]),'DOTDIV':([20,35,36,37,38,39,40,42,43,44,45,50,56,57,74,75,86,87,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,111,112,113,115,118,122,123,124,129,130,131,139,],[-57,73,-19,-20,-21,-22,-23,-41,-42,-43,-44,73,-22,73,-53,73,73,73,73,-42,73,73,73,73,73,73,73,73,73,73,73,73,-39,-40,-45,-46,73,73,73,73,-58,-24,-25,-26,73,-42,73,73,]),'TRANSPOSE':([20,35,36,37,38,39,40,42,43,44,45,50,56,57,74,75,86,87,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,111,112,113,115,118,122,123,124,129,130,131,139,],[-57,74,-19,-20,-21,-22,-23,-41,-42,-43,-44,74,-22,74,-53,-54,74,74,74,-42,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-45,-46,74,74,74,74,-58,-24,-25,-26,74,-42,74,74,]),',':([20,33,34,35,36,37,38,39,40,42,43,44,45,74,75,77,78,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,118,120,121,122,123,124,130,],[-57,59,-16,-18,-19,-20,-21,-22,-23,-41,-42,-43,-44,-53,-54,110,-50,119,-52,-17,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-45,-46,-58,110,-49,-24,-25,-26,-51,]),')':([20,36,37,38,39,40,42,43,44,45,74,75,86,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,111,112,113,118,122,123,124,139,],[-57,-19,-20,-21,-22,-23,-41,-42,-43,-44,-53,-54,116,117,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-45,-46,122,123,124,-58,-24,-25,-26,140,]),']':([20,36,37,38,39,40,42,43,44,45,74,75,76,77,78,88,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,118,120,121,122,123,124,129,130,],[-57,-19,-20,-21,-22,-23,-41,-42,-43,-44,-53,-54,107,109,-50,118,-60,-42,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-45,-46,-58,-47,-49,-24,-25,-26,-59,-42,]),':':([20,36,37,38,39,40,42,43,44,45,74,75,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,115,118,122,123,124,],[-57,-19,-20,-21,-22,-23,-41,-42,-43,-44,-53,-54,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-45,-46,126,-58,-24,-25,-26,]),'{':([20,36,37,38,39,40,42,43,44,45,51,74,75,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,116,117,118,122,123,124,131,132,136,140,],[-57,-19,-20,-21,-22,-23,-41,-42,-43,-44,84,-53,-54,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-45,-46,84,84,-58,-24,-25,-26,-76,84,84,84,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'file':([0,],[1,]),'instructions':([0,84,],[2,114,]),'instruction':([0,2,51,84,114,116,117,132,136,140,],[3,21,83,3,21,83,83,83,83,83,]),'assign_instr':([0,2,27,51,84,114,116,117,132,136,140,],[4,4,58,4,4,4,4,4,4,4,4,]),'print_instr':([0,2,51,84,114,116,117,132,136,140,],[5,5,5,5,5,5,5,5,5,5,]),'return_instruction':([0,2,51,84,114,116,117,132,136,140,],[6,6,6,6,6,6,6,6,6,6,]),'break_instruction':([0,2,51,84,114,116,117,132,136,140,],[7,7,7,7,7,7,7,7,7,7,]),'continue_instruction':([0,2,51,84,114,116,117,132,136,140,],[8,8,8,8,8,8,8,8,8,8,]),'for_instruction':([0,2,51,84,114,116,117,132,136,140,],[9,9,9,9,9,9,9,9,9,9,]),'while_instr':([0,2,51,84,114,116,117,132,136,140,],[10,10,10,10,10,10,10,10,10,10,]),'if_instruction':([0,2,51,84,114,116,117,132,136,140,],[11,11,11,11,11,11,11,11,11,11,]),'variable':([0,2,13,14,27,41,51,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,79,80,81,84,85,114,116,117,119,126,132,136,137,140,],[12,12,39,39,56,39,12,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,12,39,12,12,12,39,39,12,12,39,12,]),'assign_block':([12,56,],[27,27,]),'print_expressions':([13,],[33,]),'print_expression':([13,59,],[34,92,]),'expression':([13,14,27,41,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,79,80,81,85,119,126,137,],[35,50,57,75,86,87,90,35,93,94,95,96,97,98,99,100,101,102,103,104,105,106,111,112,113,115,129,131,139,]),'bin_expression':([13,14,27,41,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,79,80,81,85,119,126,137,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'un_expression':([13,14,27,41,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,79,80,81,85,119,126,137,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'constant':([13,14,27,41,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,79,80,81,85,119,126,137,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'matrix_init_fun':([13,14,27,41,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,79,80,81,85,119,126,137,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'matrix_initialization':([13,14,27,41,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,79,80,81,85,119,126,137,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'range':([17,],[51,]),'rows':([46,],[76,]),'row':([46,108,],[77,120,]),'instruction_block':([51,116,117,132,136,140,],[82,127,128,135,138,141,]),'matrix_reference':([55,],[88,]),'locations':([55,],[89,]),'elif_block':([128,141,],[133,142,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> file","S'",1,None,None,None),
  ('file -> instructions','file',1,'p_file','Mparser.py',39),
  ('instructions -> instructions instruction','instructions',2,'p_instructions_1','Mparser.py',43),
  ('instructions -> instruction','instructions',1,'p_instructions_2','Mparser.py',47),
  ('instruction -> assign_instr ;','instruction',2,'p_instruction','Mparser.py',51),
  ('instruction -> print_instr ;','instruction',2,'p_instruction','Mparser.py',52),
  ('instruction -> return_instruction ;','instruction',2,'p_instruction','Mparser.py',53),
  ('instruction -> break_instruction ;','instruction',2,'p_instruction','Mparser.py',54),
  ('instruction -> continue_instruction ;','instruction',2,'p_instruction','Mparser.py',55),
  ('instruction -> for_instruction','instruction',1,'p_instruction','Mparser.py',56),
  ('instruction -> while_instr','instruction',1,'p_instruction','Mparser.py',57),
  ('instruction -> if_instruction','instruction',1,'p_instruction','Mparser.py',58),
  ('break_instruction -> BREAK','break_instruction',1,'p_break_instruction','Mparser.py',62),
  ('continue_instruction -> CONTINUE','continue_instruction',1,'p_continue_instruction','Mparser.py',66),
  ('return_instruction -> RETURN expression','return_instruction',2,'p_return_instruction','Mparser.py',70),
  ('print_instr -> PRINT print_expressions','print_instr',2,'p_print_instruction','Mparser.py',74),
  ('print_expressions -> print_expression','print_expressions',1,'p_print_expressions','Mparser.py',78),
  ('print_expressions -> print_expressions , print_expression','print_expressions',3,'p_print_expressions','Mparser.py',79),
  ('print_expression -> expression','print_expression',1,'p_print_expression','Mparser.py',87),
  ('expression -> bin_expression','expression',1,'p_expression','Mparser.py',91),
  ('expression -> un_expression','expression',1,'p_expression','Mparser.py',92),
  ('expression -> constant','expression',1,'p_expression','Mparser.py',93),
  ('expression -> variable','expression',1,'p_expression','Mparser.py',94),
  ('expression -> matrix_init_fun','expression',1,'p_expression','Mparser.py',95),
  ('matrix_init_fun -> ZEROS ( expression )','matrix_init_fun',4,'p_matrix_init_fun_zeros','Mparser.py',99),
  ('matrix_init_fun -> ONES ( expression )','matrix_init_fun',4,'p_matrix_init_fun_ones','Mparser.py',103),
  ('matrix_init_fun -> EYE ( expression )','matrix_init_fun',4,'p_matrix_init_fun_eye','Mparser.py',107),
  ('bin_expression -> expression + expression','bin_expression',3,'p_bin_expression','Mparser.py',111),
  ('bin_expression -> expression - expression','bin_expression',3,'p_bin_expression','Mparser.py',112),
  ('bin_expression -> expression * expression','bin_expression',3,'p_bin_expression','Mparser.py',113),
  ('bin_expression -> expression / expression','bin_expression',3,'p_bin_expression','Mparser.py',114),
  ('bin_expression -> expression < expression','bin_expression',3,'p_bin_expression','Mparser.py',115),
  ('bin_expression -> expression > expression','bin_expression',3,'p_bin_expression','Mparser.py',116),
  ('bin_expression -> expression LEQ expression','bin_expression',3,'p_bin_expression','Mparser.py',117),
  ('bin_expression -> expression GEQ expression','bin_expression',3,'p_bin_expression','Mparser.py',118),
  ('bin_expression -> expression NOTEQ expression','bin_expression',3,'p_bin_expression','Mparser.py',119),
  ('bin_expression -> expression EQUAL expression','bin_expression',3,'p_bin_expression','Mparser.py',120),
  ('bin_expression -> expression DOTADD expression','bin_expression',3,'p_bin_expression','Mparser.py',121),
  ('bin_expression -> expression DOTSUB expression','bin_expression',3,'p_bin_expression','Mparser.py',122),
  ('bin_expression -> expression DOTMUL expression','bin_expression',3,'p_bin_expression','Mparser.py',123),
  ('bin_expression -> expression DOTDIV expression','bin_expression',3,'p_bin_expression','Mparser.py',124),
  ('constant -> FLOAT','constant',1,'p_constant','Mparser.py',129),
  ('constant -> INT','constant',1,'p_constant','Mparser.py',130),
  ('constant -> STRING','constant',1,'p_constant','Mparser.py',131),
  ('constant -> matrix_initialization','constant',1,'p_constant','Mparser.py',132),
  ('matrix_initialization -> [ rows ]','matrix_initialization',3,'p_matrix_initialization','Mparser.py',136),
  ('matrix_initialization -> [ row ]','matrix_initialization',3,'p_matrix_initialization','Mparser.py',137),
  ('rows -> rows ; row','rows',3,'p_rows','Mparser.py',144),
  ('rows -> row','rows',1,'p_rows','Mparser.py',145),
  ('row -> row , INT','row',3,'p_row','Mparser.py',148),
  ('row -> INT','row',1,'p_row','Mparser.py',149),
  ('locations -> locations , INT','locations',3,'p_locations','Mparser.py',152),
  ('locations -> INT','locations',1,'p_locations','Mparser.py',153),
  ('un_expression -> expression TRANSPOSE','un_expression',2,'p_un_expression_1','Mparser.py',156),
  ('un_expression -> - expression','un_expression',2,'p_un_expression_2','Mparser.py',160),
  ('assign_instr -> variable assign_block expression','assign_instr',3,'p_assign_instr_end','Mparser.py',164),
  ('assign_instr -> variable assign_block assign_instr','assign_instr',3,'p_assign_instr_middle','Mparser.py',168),
  ('variable -> ID','variable',1,'p_variable','Mparser.py',173),
  ('variable -> ID [ matrix_reference ]','variable',4,'p_variable','Mparser.py',174),
  ('matrix_reference -> locations , expression','matrix_reference',3,'p_matrix_reference','Mparser.py',181),
  ('matrix_reference -> expression','matrix_reference',1,'p_matrix_reference','Mparser.py',182),
  ('assign_block -> =','assign_block',1,'p_assign_block','Mparser.py',189),
  ('assign_block -> ADDASSIGN','assign_block',1,'p_assign_block','Mparser.py',190),
  ('assign_block -> SUBASSIGN','assign_block',1,'p_assign_block','Mparser.py',191),
  ('assign_block -> MULASSIGN','assign_block',1,'p_assign_block','Mparser.py',192),
  ('assign_block -> DIVASSIGN','assign_block',1,'p_assign_block','Mparser.py',193),
  ('while_instr -> WHILE ( expression ) instruction_block','while_instr',5,'p_while_instr','Mparser.py',197),
  ('instruction_block -> instruction','instruction_block',1,'p_instruction_block','Mparser.py',201),
  ('instruction_block -> { instructions }','instruction_block',3,'p_instruction_block','Mparser.py',202),
  ('if_instruction -> IF ( expression ) instruction_block','if_instruction',5,'p_if_instruction','Mparser.py',209),
  ('if_instruction -> IF ( expression ) instruction_block ELSE instruction_block','if_instruction',7,'p_if_instruction','Mparser.py',210),
  ('if_instruction -> IF ( expression ) instruction_block elif_block','if_instruction',6,'p_if_instruction','Mparser.py',211),
  ('if_instruction -> IF ( expression ) instruction_block elif_block ELSE instruction_block','if_instruction',8,'p_if_instruction','Mparser.py',212),
  ('elif_block -> ELSE IF ( expression ) instruction_block','elif_block',6,'p_elif_block','Mparser.py',226),
  ('elif_block -> ELSE IF ( expression ) instruction_block elif_block','elif_block',7,'p_elif_block','Mparser.py',227),
  ('for_instruction -> FOR range instruction_block','for_instruction',3,'p_for_instruction','Mparser.py',235),
  ('range -> ID = expression : expression','range',5,'p_range','Mparser.py',239),
]
